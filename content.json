{"meta":{"title":"Interesting","subtitle":"ZIV","description":"personal","author":"ziv","url":"https://ziv-bigpen.github.io","root":"/"},"pages":[{"title":"404","date":"2020-09-30T09:25:30.000Z","updated":"2020-07-08T06:47:08.850Z","comments":true,"path":"404.html","permalink":"https://ziv-bigpen.github.io/404.html","excerpt":"","text":""},{"title":"about","date":"2020-07-08T06:43:00.000Z","updated":"2020-07-08T07:56:35.967Z","comments":true,"path":"about/index.html","permalink":"https://ziv-bigpen.github.io/about/index.html","excerpt":"","text":"本人自己也不知道要做什么，在这里或许会有一个机会来创建从此新世界，的确会是这样。 加油，奥力给！ 这个博客是用来写着玩的，不会怎么更新，主要更新会在语雀网站。 语雀： 个人博客"},{"title":"categories","date":"2020-07-08T06:41:28.000Z","updated":"2020-07-08T06:41:54.350Z","comments":true,"path":"categories/index.html","permalink":"https://ziv-bigpen.github.io/categories/index.html","excerpt":"","text":""},{"title":"contact","date":"2020-07-08T06:44:36.000Z","updated":"2020-07-08T06:44:48.659Z","comments":true,"path":"contact/index.html","permalink":"https://ziv-bigpen.github.io/contact/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-07-08T06:42:18.000Z","updated":"2020-07-08T06:42:40.926Z","comments":true,"path":"tags/index.html","permalink":"https://ziv-bigpen.github.io/tags/index.html","excerpt":"","text":""},{"title":"friends","date":"2020-07-14T05:59:38.000Z","updated":"2020-07-14T06:16:35.566Z","comments":true,"path":"friends/index.html","permalink":"https://ziv-bigpen.github.io/friends/index.html","excerpt":"","text":""}],"posts":[{"title":"Git","slug":"GIT","date":"2020-08-29T07:09:00.000Z","updated":"2020-08-29T07:09:55.220Z","comments":true,"path":"2020/08/29/GIT/","link":"","permalink":"https://ziv-bigpen.github.io/2020/08/29/GIT/","excerpt":"","text":"GITGit是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。 重要内容官方网站：官网资源：Pro Git，官网有中文版的PDF文件，讲述地非常详细，值得一看。 开始使用初始配置#打开命令框：右键->git Bash Here #配置用户名与邮箱 git config --global user.name \"username\" #用户名 git config --global user.email \"emali@example.com\" #邮箱 #查看配置信息 git config -l #查看git版本 git version 三种状态 已修改(modeified)：修改了文件，还没有保存到数据库中。 已暂存(staged)：对一个已修改的文件的当前版本做的标记，供以提交。 已提交(committed)：数据已经安全地保存在本地数据库中上。 由于这三个状态，Git项目对应拥有三个阶段： 工作区：对项目的某个版本独立提取出的内容，与项目文件夹对应。 暂存区：是一个文件，保存了下次将要提交的文件列表信息，一般在Git仓库目录中。 Git仓库：保存项目的元数据和对象数据库的地方。 简单的工作流程： 在工作区修改文件。 将想要提交的数据放入暂存区。 提交更新，把暂存区的所有文件永久性存储到Git目录中。Git基础#初始化 git init #追踪文件,写文件名 git add . git add README # 从暂存区移除文件 git rm --cached filename # 提交,-m 必须要写 git commit -m 'initial project version' # 克隆仓库，从云端 git clone &lt;url> # 检查当前文件状态 git status # 查看日志 git log # 将文件返回至与元数据一致 git checkout -- &lt;file> 忽略文件忽略一些不需要进行Git管理的文件，如日志文件、临时文件等。# 生成.gitignore文件 cat .gitignore 忽略所有的 .a 文件*.a 但跟踪所有的 lib.a，即便你在前面忽略了 .a 文件!lib.a 只忽略当前目录下的 TODO 文件，而不忽略 subdir/TODO/TODO 忽略任何目录下名为 build 的文件夹build/ 忽略 doc/notes.txt，但不忽略 doc/server/arch.txtdoc/*.txt 忽略 doc/ 目录及其所有子目录下的 .pdf 文件doc/*/.pdf ### 远程仓库 #### 分类 [Gitee](https://gitee.com/)：国内的github [github](https://github.com/)：代码托管网站 #### 设计SSH秘钥 ```git # 在本地运行 ,&quot; &quot;内容可以随便写，回车三次即可生成 ssh-keygen -t rsa -C &quot;xxxx@email.com&quot; # 在C:\\Users\\主机名\\.ssh中会生成两个文件，id_rsa.pub是公钥， # 打开后复制里面的内容。id_rsa是私钥，不能泄露出去。 # 登陆gitee,在账户设置中，选择 &quot;SSH Keys&quot; , # 起一个名字，在Key中填写 id_rsa.pub 文件中的本地有，运程没有# 先在创建一个空项目，复制项目地址 # 本地连接远程 git remote add origin &lt;url> # 推送文件至远程仓库 git push origin master 分支操作# 查看分支 git branch # 创建分支 git branch dev # 切换分支 git checkout dev # 简易日志 git log --oneline git log # 合并分支 git merge dev # 冲突解决","categories":[{"name":"工具","slug":"工具","permalink":"https://ziv-bigpen.github.io/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"工具","slug":"工具","permalink":"https://ziv-bigpen.github.io/tags/%E5%B7%A5%E5%85%B7/"}]},{"title":"Windows常用软件","slug":"Windows常用软件","date":"2020-05-16T10:11:25.000Z","updated":"2020-07-09T07:55:41.346Z","comments":true,"path":"2020/05/16/Windows常用软件/","link":"","permalink":"https://ziv-bigpen.github.io/2020/05/16/Windows%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/","excerpt":"","text":"Windows常用软件浏览器Microsoft Edge微软出品的最新的基于Chromium内核（谷歌）的浏览器，兼容谷歌的所有插件，最重要的是可以登陆微软账号同步设置，且有和chrome一样的体验。 插件 Infinty Pro 管理常用网页的插件 哔哩哔哩助手 B站常用 oneTable 整理所有打开的标签页，然后可以一键恢复，用于节约内存 写作OneNoteWin10自带的笔记软件，可在微软应用商店里下载。笔记分为三层结构——笔记本、分区、分页，写作起来比较舒适，功能比较完善，配合Microsfot 365使用起来比较快乐。优点：微软出品，不用担心倒闭缺点：同步效果比较差 语雀综合看来是最好的博客网站，功能齐全，界面友好。 XMind最优雅的思维导图软件，免费的功能已经足够用，一般用于整理思维，然后基于思维导图写作。 WPS国产Office软件，可以打开几乎所有类型的文档，个人觉得非常好用。但在在写论文或其它重要文件时请使用Microsoft Office，WPS大部分是作为文件查看器，小文件修改的工具。建议使用WPS Office 校园版，使用起来比较合适。 Typora最优雅的Markdown编辑器，即时渲染，全平台。 沟通TIMQQ轻聊版的进化，无广告。 微信万恶之源 云盘坚果云同步盘，建议用来存放文档，而且还可以提供一些接口给其它软件使用。 OneDrive唯一的缺点是网络问题 百度网盘建议作为接收、分享网盘，个人资料不要存放在这里，主要用于分享文件，获得他人分享的文件。 windowsMicrosoft to do微软应用商店下载，是个todo list。 便笺微软应用商店下载，移动端的应用被整合在OneNote里 截图Snipaste微软应用商店下载，功能强大 压缩Bandizip免费版有广告但平时使用时看不到，功能强大。 安全火绒主要用于干掉windows defender","categories":[],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://ziv-bigpen.github.io/tags/Windows/"},{"name":"软件","slug":"软件","permalink":"https://ziv-bigpen.github.io/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"时间和日期","slug":"时间和日期","date":"2020-05-16T10:11:25.000Z","updated":"2020-07-14T06:09:51.545Z","comments":true,"path":"2020/05/16/时间和日期/","link":"","permalink":"https://ziv-bigpen.github.io/2020/05/16/%E6%97%B6%E9%97%B4%E5%92%8C%E6%97%A5%E6%9C%9F/","excerpt":"","text":"时间和日期简介在Java8版本提供了新的时间和日期的API，主要是为了替换旧的API（Date、calendar，当初设计时考虑不完善）。新增加的主要内容如下： 本地日期和时间：LocalDateTime，LocalDate，LocalTime； 带时区的日期和时间：ZonedDateTime； 时刻：Instant； 时区：ZoneId，ZoneOffset； 时间间隔：Duration。 格式转换：DateTimeFormatter LocalDateTime//构造方法 LocalDate d = LocalDate.now(); // 当前日期 LocalTime t = LocalTime.now(); // 当前时间 LocalDateTime dt = LocalDateTime.now(); // 当前日期和时间 System.out.println(d); // 严格按照ISO 8601格式打印 System.out.println(t); // 严格按照ISO 8601格式打印 System.out.println(dt); // 严格按照ISO 8601格式打印 //时期变换 //加减日期，自动计算 LocatDateTime dt0 = dt.plusDays(1).minusHours(1);//加一天，减一小时 LocatDateTime dt0 = dt.withYear() DateTimeFormatter日期的常用格式有 日期：yyyy-MM-dd 时间：HH:mm:ss 带毫秒的时间：HH:mm:ss.SSS 日期和时间：yyyy-MM-dd’T’HH:mm:ss 带毫秒的日期和时间：yyyy-MM-dd’T’HH:mm:ss.SSS //自定义格式 DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"); String now = dtf.format(LocalDateTime.now()); //自定义格式解析 LocalDateTime dt2 = LocalDateTime.parse(\"2019/11/30 15:16:17\",dtf); Sysout.out.println(dt2);","categories":[{"name":"Java","slug":"Java","permalink":"https://ziv-bigpen.github.io/categories/Java/"}],"tags":[{"name":"时间","slug":"时间","permalink":"https://ziv-bigpen.github.io/tags/%E6%97%B6%E9%97%B4/"},{"name":"Java","slug":"Java","permalink":"https://ziv-bigpen.github.io/tags/Java/"}]},{"title":"集合","slug":"集合","date":"2020-05-16T10:11:25.000Z","updated":"2020-07-14T06:09:38.008Z","comments":true,"path":"2020/05/16/集合/","link":"","permalink":"https://ziv-bigpen.github.io/2020/05/16/%E9%9B%86%E5%90%88/","excerpt":"","text":"集合简介Java中的集合是对常用的数据结构进行封装和实现，在第一阶段要了解集合类型是如何使用，第二阶段要知道底层代码是如何实现，第三阶段要尝试自己实现集合类型。 快速预览 名称 特性 应用场景 实现的接口 重要方法 内部实现 ArrayList 线性存储 需要有序、查询 数组 LinkedList 链式存储 插入、删除效率高 链表 HashSet 将对象的Hash值作为问题对象的“索引(index)” 需要很快的查找和增删操作 Set Cloneable Serializable add remove contains size iterator 由一个HashMap实现 Collection add contains remove size iterator hasNext next remove ListArrayListLinkedList 遍历Set具有确定性、互异性、无序性。 HashSet基于散列函数，可以存放Null add clear contains remove retainAll 计算两个集合交集 在进行存放数据时一般要重写 hashcode() equals() toString() 这三个方法，先判断hashcode值，然后判断equals。TreeSet基于树结构，可排序，因为要进行排序，所以不容纳null元素。在比较元素时比较的是CompareTo方法，要实现Comparable接口。 linkedHashSet基于散列函数与双向链表存入的元素与输出的顺序一致，是有序的结构。 MapHashMap TreeMap基于红黑树进行排序HashTable put contains containsValue containsKey get remove clear LinkedHashMap 工具类Arrays用于基本类型 Collections用于子类对象 比较（Comparable、Comparator）Comparable接口，一般用在类内部，当有代码的时候可以用。 compareTo方法。左边-右边 Comparator接口，一般不知道源代码，只在外边使用。 compare方法，设计一个类实现此接口，把类的实例传给要排序的对象。可以把这个比较器给其它工具类","categories":[{"name":"Java","slug":"Java","permalink":"https://ziv-bigpen.github.io/categories/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://ziv-bigpen.github.io/tags/Java/"},{"name":"集合","slug":"集合","permalink":"https://ziv-bigpen.github.io/tags/%E9%9B%86%E5%90%88/"}]},{"title":"hello myblog by hexo","slug":"hello-myblog-by-hexo","date":"2020-03-23T14:51:43.000Z","updated":"2020-03-23T14:53:36.469Z","comments":true,"path":"2020/03/23/hello-myblog-by-hexo/","link":"","permalink":"https://ziv-bigpen.github.io/2020/03/23/hello-myblog-by-hexo/","excerpt":"","text":"主题首先作为一个计算机专业的学生，写一个博客是很正常的事情。","categories":[],"tags":[]}],"categories":[{"name":"工具","slug":"工具","permalink":"https://ziv-bigpen.github.io/categories/%E5%B7%A5%E5%85%B7/"},{"name":"Java","slug":"Java","permalink":"https://ziv-bigpen.github.io/categories/Java/"}],"tags":[{"name":"工具","slug":"工具","permalink":"https://ziv-bigpen.github.io/tags/%E5%B7%A5%E5%85%B7/"},{"name":"Windows","slug":"Windows","permalink":"https://ziv-bigpen.github.io/tags/Windows/"},{"name":"软件","slug":"软件","permalink":"https://ziv-bigpen.github.io/tags/%E8%BD%AF%E4%BB%B6/"},{"name":"时间","slug":"时间","permalink":"https://ziv-bigpen.github.io/tags/%E6%97%B6%E9%97%B4/"},{"name":"Java","slug":"Java","permalink":"https://ziv-bigpen.github.io/tags/Java/"},{"name":"集合","slug":"集合","permalink":"https://ziv-bigpen.github.io/tags/%E9%9B%86%E5%90%88/"}]}